---
// about.astro
import Layout from "../layouts/Layout.astro";
import CodeSnippet from "../components/CodeSnippet.astro";

// Ejemplo de respuesta JSON de una API
const apiResponse = {
  status: "success",
  data: {
    id: 1,
    name: "John Doe",
    email: "john.doe@example.com",
    isActive: true,
    createdAt: "2023-10-01T12:00:00Z",
  },
};
---

<Layout>
  
  <script>
    // Function to detect scroll event
    document.addEventListener("DOMContentLoaded", function () {
      const elements = document.querySelectorAll(".hidden");

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add("visible");
            }
          });
        },
        {
          threshold: 0.1, // Ajusta este valor para cambiar cu치ndo se activa la animaci칩n
        }
      );

      elements.forEach((element) => {
        observer.observe(element);
      });
    });
  </script>

  <h1>Acerca de</h1>
  <p>Informaci칩n sobre mi sitio y su prop칩sito.</p>

  <!-- Grid layout de prueba -->
  <div class="grid-main-container hidden">
    <div class="grid-container">
      <div class="grid-item">
        <div class="hover-content">Contenido</div>
      </div>
      <div class="grid-item">
        <div class="hover-content">Contenido</div>
      </div>
      <div class="grid-item">
        <div class="hover-content">Contenido</div>
      </div>
      <div class="grid-item">
        <div class="hover-content">Contenido</div>
      </div>
      <div class="grid-item">
        <div class="hover-content">Contenido</div>
      </div>
      <div class="grid-item">
        <div class="hover-content">Contenido</div>
      </div>
    </div>
  </div>

  <div class="hidden">
    <h1>esto es una prueba para el scroll</h1>
  </div>
  
  <div class="hidden">
    <h1>Holaaa</h1>
    <h1>Holaaa</h1>
    <h1>Holaaa</h1>
    <h1>Holaaa</h1>
  </div>

  <section class="hidden">
    <CodeSnippet code={apiResponse} />
  </section>

  <style>
    .grid-main-container {
      display: flex;
      width: 100%;
      height: 100%;
      justify-content: center;
      margin: 52px;
    }

    .grid-container {
      width: 90%;
      display: grid;
      grid-template-columns: repeat(8, 1fr);
      gap: 6px;
      border: 1px solid #000;
      grid-auto-rows: minmax(120px, auto);
    }

    .grid-item {
      background: linear-gradient(45deg, #ff7e5f, #feb47b);
      border: 1px solid #000;
      border-radius: 8px;
      transition: all 0.3s ease;
      padding: 18px;
    }

    /* item 1 */
    .grid-item:nth-child(1) {
      grid-column: 1 / 3;
      grid-row: 1 / 4;
    }

    /* item 2 */
    .grid-item:nth-child(2) {
      grid-column: 3 / 5;
      grid-row: 1 / 2;
    }
    .grid-item:nth-child(3) {
      grid-column: 5 / 6;
      grid-row: 1 / 2;
    }
    .grid-item:nth-child(4) {
      grid-column: 6 / 8;
      grid-row: 1 / 3;
    }
    .grid-item:nth-child(5) {
      grid-column: 3 / 6;
      grid-row: 2 / 4;
    }
    .grid-item:nth-child(6) {
      grid-column: 6 / 8;
      grid-row: 3 / 4;
    }

    /* hover settings */
    .grid-item:hover {
      transform: scale(1.05);
      transition: all 0.3s ease;
      cursor: pointer;
    }
    .hover-content {
      opacity: 0;
      transition: all 0.3s ease;
    }
    .grid-item:hover .hover-content {
      opacity: 1;
      transition: all 0.3s ease;
    }

    /* Scroll animations */
    /* Estilos iniciales para los elementos que quieres animar */
    .hidden {
      opacity: 0;
      transform: translateY(20px);
      transition:
        opacity 0.6s ease-out,
        transform 0.6s ease-out;
    }

    /* Estilos cuando el elemento es visible */
    .visible {
      opacity: 1;
      transform: translateY(0);
    }
  </style>
</Layout>
